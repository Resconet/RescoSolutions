{"version":3,"sources":["components/Card/Card.jsx","components/CardsContainer/CardsContainer.jsx","fetchSample.js","components/InspectorPopup/InspectorPopup.jsx","App.js","store.js","index.js"],"names":["Card","iconSrc","header","description","onClick","homeItem","href","className","window","open","style","backgroundImage","CardsContainer","children","MobileCRM","InspectorPopup","visible","closePopup","useState","qr","setQr","organization","setOrganization","mail","setMail","useEffect","Configuration","requestObject","config","settings","organizationName","crmOrganization","systemUserId","resolve","fetchEntity","FetchXml","Entity","addAttribute","filter","Filter","type","cond1","Condition","attribute","operator","value","conditions","push","Fetch","executeAsync","then","result","length","bridge","alert","i","entity","catch","err","output","base64","qrcode","toDataURL","console","log","document","body","overflow","setTimeout","classList","classNames","App","inspectorPopup","setInspectorPopup","homeFormItems","setHomeFormItems","UI","HomeForm","homeForm","items","map","item","text","title","name","toggleInspectorPopup","handleHomeItem","selector","homeFormItem","find","openHomeItemAsync","store","createStore","state","action","data","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2298541d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.scss';\r\n\r\nconst Card = ({ iconSrc, header, description, onClick, homeItem, href }) => {\r\n    return (\r\n        <div className=\"card\" onClick={onClick ? () => onClick(homeItem) : href ? () => {\r\n            window.open(href);\r\n        } : () => {}}> \r\n            <i className=\"card__icon\" style={{backgroundImage: `url('${iconSrc}')`}}></i>\r\n            <h1 className=\"card__header\">{header}</h1>\r\n            <p className=\"card__description\">{description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './style.scss';\r\n\r\nconst CardsContainer = ({ header, description, children }) => {\r\n    return (\r\n        <section className=\"cards-container\">\r\n            <h1 className=\"cards-container__header\">{header}</h1>\r\n            {description\r\n            ? <p className=\"cards-container__description\">{description}</p>\r\n            : null\r\n            }\r\n            <div className=\"cards-container__wrapper\">\r\n                {children}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CardsContainer;","\r\nconst MobileCRM = window.MobileCRM;\r\n\r\nexport default function executeAsync(systemUserId, resolve) {\r\n    var fetchEntity = new MobileCRM.FetchXml.Entity(\"systemuser\");\r\n    fetchEntity.addAttribute(\"internalemailaddress\");\r\n  \r\n    var filter = new MobileCRM.FetchXml.Filter();\r\n    filter.type = \"and\";\r\n\r\n    var cond1 = new MobileCRM.FetchXml.Condition();\r\n    cond1.attribute = \"id\";\r\n    cond1.operator = \"eq\";\r\n    cond1.value = systemUserId;\r\n\r\n    filter.conditions.push(cond1);\r\n\r\n    fetchEntity.filter = filter;\r\n\r\n    var fetch = new MobileCRM.FetchXml.Fetch(fetchEntity);\r\n\r\n    fetch.executeAsync(null).then((result) => { // \"null\" stands for default \"DynamicEntities\" result format\r\n        if (result.length < 1) {\r\n            MobileCRM.bridge.alert(\"Not any order begins with 'Bike' and total amount grater than 1500 was found\");\r\n        }\r\n        else {\r\n            for (var i in result) {\r\n                var entity = result[i];\r\n                resolve(entity[0]);\r\n            }\r\n        }\r\n        // MobileCRM.bridge.alert(info);\r\n    }).catch((err) => {\r\n        MobileCRM.bridge.alert(err);\r\n    });\r\n}","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { useEffect } from \"react\";\r\nimport qrcode from \"qrcode-js\";\r\nimport classNames from \"classnames\";\r\nimport executeAsync from \"fetchSample\";\r\nimport { useState } from \"react\";\r\n\r\nconst MobileCRM = window.MobileCRM;\r\n\r\nconst InspectorPopup = ({ visible, closePopup }) => {\r\n  const [qr, setQr] = useState(null);\r\n  const [organization, setOrganization] = useState(null);\r\n  const [mail, setMail] = useState(null);\r\n  useEffect(() => {\r\n    if (!qr) {\r\n      MobileCRM.Configuration.requestObject(\r\n        (config) => {\r\n          let { settings } = config;\r\n          const organizationName = settings.crmOrganization;\r\n          const { systemUserId } = settings;\r\n          executeAsync(systemUserId, (mail) => {\r\n            let output = `url=https://inspections.resco.net/${organizationName}\\nusermode=0\\nusername=${mail}\\nsavepassword=1`;\r\n            const base64 = qrcode.toDataURL(output, 4);\r\n            setQr(base64);\r\n            setMail(mail);\r\n            setOrganization(organizationName);\r\n          });\r\n        },\r\n        (err) => {\r\n          console.log(\"An error occurred: \" + err);\r\n        },\r\n        null\r\n      );\r\n    }\r\n    if (visible) {\r\n      document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      setTimeout(() => {\r\n        document.body.style.overflow = \"initial\";\r\n      }, 400);\r\n    }\r\n  }, [visible]);\r\n\r\n  const classList = classNames(\"inspector-popup__wrapper\", {\r\n    \"inspector-popup__wrapper--visible\": visible,\r\n  });\r\n  return (\r\n    <div className={classList}>\r\n      <section className=\"inspector-popup\">\r\n        <div\r\n          className=\"inspector-popup__qr\"\r\n          style={{ backgroundImage: `url(${qr})` }}\r\n        ></div>\r\n        <section className=\"inspector-popup__section\">\r\n          <h1 className=\"inspector-popup__header inspector-popup--green\">\r\n            Download the Resco Inspections mobile app\r\n          </h1>\r\n          <ul className=\"inspector-popup__list\">\r\n            <li className=\"inspector-popup__list-item\">\r\n              1. Download the mobile app for{\" \"}\r\n              <a href=\"https://itunes.apple.com/ua/app/resco-inspections/id1357591626?mt=8\">\r\n                iOS\r\n              </a>\r\n              ,{\" \"}\r\n              <a href=\"https://play.google.com/store/apps/details?id=net.resco.inspections\">\r\n                Android\r\n              </a>{\" \"}\r\n              or{\" \"}\r\n              <a href=\"https://www.microsoft.com/en-us/p/resco-inspections/9n4gsvt8bnfj\">\r\n                Windows\r\n              </a>\r\n            </li>\r\n            <li className=\"inspector-popup__list-item\">2. Run the app</li>\r\n            <li className=\"inspector-popup__list-item\">\r\n              3. On the ‘Welcome to Resco Mobile CRM’ screen select ‘Internal\r\n              User’\r\n            </li>\r\n            <li className=\"inspector-popup__list-item\">\r\n              4. Enter the URL{\" \"}\r\n              <span className=\"inspector-popup--green\">\r\n                https://inspections.resco.net/{organization || \"organization\"}\r\n              </span>\r\n              , username{\" \"}\r\n              <span className=\"inspector-popup--green\">{mail || \"\"}</span>, and\r\n              password\r\n            </li>\r\n          </ul>\r\n          <p className=\"inspector-popup__paragraph\">\r\n            …or simply hit the{\" \"}\r\n            <span className=\"inspector-popup--green\">‘Scan QR’</span> button and\r\n            scan the QR code.\r\n          </p>\r\n        </section>\r\n        <i className=\"inspector-popup__close\" onClick={closePopup}></i>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InspectorPopup;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport { Card, CardsContainer, InspectorPopup } from \"components\";\nimport executeAsync from \"fetchSample\";\n\nconst MobileCRM = window.MobileCRM;\n\nfunction App() {\n  const [inspectorPopup, setInspectorPopup] = useState(false);\n  const [homeFormItems, setHomeFormItems] = useState(null);\n\n  useEffect(() => {\n    if (!homeFormItems) {\n      MobileCRM.UI.HomeForm.requestObject((homeForm) => {\n        if (homeForm)\n          setHomeFormItems(\n            homeForm.items.map((item) => ({\n              text: item.title,\n              name: item.name,\n            }))\n          );\n      }, console.log);\n    }\n  }, []);\n  const toggleInspectorPopup = () => {\n    inspectorPopup ? setInspectorPopup(false) : setInspectorPopup(true);\n  };\n\n  const handleHomeItem = (selector) => {\n    if (!homeFormItems) {\n      console.log(\"homeFormItems not found\");\n      return;\n    }\n\n    const homeFormItem = homeFormItems.find((item) => item.text === selector);\n    if (!homeFormItem) {\n      console.log(\"homeFormItem \" + selector + \" not found in: \", homeFormItems);\n      return;\n    }\n\n    MobileCRM.UI.HomeForm.openHomeItemAsync(\n      homeFormItem.name,\n      console.log,\n      null\n    );\n  };\n\n  return (\n    <>\n      <CardsContainer header=\"ALL MODULES\">\n        <Card\n          onClick={handleHomeItem}\n          homeItem=\"Questionnaire Designer\"\n          iconSrc=\"icons/templates_designer.png\"\n          header=\"Questionnaire Designer\"\n          description=\"Build your questionnaires from scratch.\"\n        />\n        <Card\n          onClick={handleHomeItem}\n          homeItem=\"Schedule Board\"\n          iconSrc=\"icons/schedule_board.png\"\n          header=\"Schedule Board\"\n          description=\"Assign appointments to users, plan work for your field team, and see their progress.\"\n        />\n\n        {/* Exception, doesn't open homeItem */}\n        <Card\n          onClick={toggleInspectorPopup}\n          iconSrc=\"icons/inspector.png\"\n          header=\"Inspector\"\n          description=\"App for executing inspections and filling out questionnaires in the field.\"\n        />\n\n        <Card\n          onClick={handleHomeItem}\n          homeItem=\"Dashboard\"\n          iconSrc=\"icons/automatic_dashboard.png\"\n          header=\"Dashboard\"\n          description=\"Evaluate and visualize the data sent back by the inspectors.\"\n        />\n        <Card\n          onClick={handleHomeItem}\n          homeItem=\"Result Viewer\"\n          iconSrc=\"icons/result_viewer.png\"\n          header=\"Result Viewer\"\n          description=\"Evaluate and visualize the data sent back by the inspectors.\"\n        />\n        <Card\n          onClick={handleHomeItem}\n          homeItem=\"Submitted Reports\"\n          iconSrc=\"icons/report_designer.png\"\n          header=\"Submitted Reports\"\n          description=\"Enables you to set up mobile reports that provide a clear-cut overview of your data.\"\n        />\n        <Card\n          onClick={handleHomeItem}\n          homeItem=\"App Configurator\"\n          iconSrc=\"icons/woodford.png\"\n          header=\"App Configurator\"\n          description=\"Customize the mobile app to fit your requirements.\"\n        />\n        <Card\n          onClick={handleHomeItem}\n          homeItem=\"Manage Organization\"\n          iconSrc=\"icons/admin_console.png\"\n          header=\"Manage Organization\"\n          description=\"Resco Cloud settings and customization.\"\n        />\n      </CardsContainer>\n      <CardsContainer\n        header=\"CONNECTORS\"\n        description=\"Use connectors for Dynamics 365, Salesforce, or SAP, to take the full advantage of Inspections integrated with your own backend.\"\n      >\n        <Card\n          href=\"mailto:sales@resco.net?subject=Connector for Resco Inspections: Dynamics CRM\"\n          iconSrc=\"icons/dynamics.png\"\n          header=\"Dynamics 365/CRM\"\n          description=\"Use Inspections directly in your Dynamics 365 environment \"\n        />\n        <Card\n          href=\"mailto:sales@resco.net?subject=Connector for Resco Inspections: Salesforce\"\n          iconSrc=\"icons/salesforce.png\"\n          header=\"Salesforce\"\n          description=\"Connect and work with your Salesforce data instantly and securely.\"\n        />\n        <Card\n          href=\"mailto:sales@resco.net?subject=Connector for Resco Inspections: SAP\"\n          iconSrc=\"icons/sap.png\"\n          header=\"SAP\"\n          description=\"Connect to your ERP and work with your data.\"\n        />\n      </CardsContainer>\n      <InspectorPopup\n        visible={inspectorPopup}\n        closePopup={toggleInspectorPopup}\n      />\n    </>\n  );\n}\n\nexport default App;\n\n//Scheduler, My Dashboard, Submitted Reports,\n","\r\nimport { createStore } from 'redux';\r\n\r\nconst rootReducer = (state = [], action) => {\r\n    const { data, type } = action;\r\n    switch (type) {\r\n        case \"LOAD_DATA\":\r\n            return {\r\n                ...state,\r\n                data\r\n            }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nconst loadData = data => ({\r\n    type: \"LOAD_DATA\",\r\n    data\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport { loadData };\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nimport './global.scss';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}